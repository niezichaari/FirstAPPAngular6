import { Component } from '@angular/core';
import { RecordsService } from './records.service';
import { HelloComponent } from './hello/hello.component'

/*function log(target, name, descriptor){
  const original = descriptor.value
  descriptor.value = function(...args){
    console.log("Arguments",args," were passed in this function");
    const result = original.apply(this,args)
  console.log("the result of the function is", result);
  return result
}
return descriptor
}

//store the original function in a variable
function log(className){
  console.log(className)
  return (...args) => {
    console.log("Arguements passed to this class's constructor are ", args)
    return new className(...args)
    
  } 
}
@log
class myExampleClass{
constructor(arg1,arg2){
console.log("Constructor fired!");
}

}


const myClass = new myExampleClass(5, 12)
*/
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  records = {}
  constructor(private myFirstService : RecordsService){

  }
  ngOnInit(){
    this.records= this.myFirstService.getData}
 /* title = 'intro';
  constructor(){
    console.log("this statement was generated by the constructor", this.aSimpleMethod(5, 2))
  }
  
  //@log
aSimpleMethod(a, b){
return a*b
}*/
}

